import { Component, EventEmitter, Input, Output } from '@angular/core';
import { NgForOf, NgIf, NgStyle } from '@angular/common';
import { TableInstance } from './commons/exportables/table-instance';
import { CognitablePaginationComponent } from './components/table/cognitable-pagination/cognitable-pagination.component';
import { CognitableHeaderCellComponent } from './components/table/cognitable-header-cell/cognitable-header-cell.component';
import { CognitableDataCellComponent } from './components/table/cogintable-data-cell/cognitable-data-cell.component';
import * as i0 from "@angular/core";
export class CognitableComponent extends TableInstance {
    tableHeaders = [];
    tableData;
    paginationEnabled = false;
    allowedPageSizes = [10, 25, 50, 100];
    pageSize = 10;
    height = 400;
    loadingMessage = 'Loading...';
    noDataMessage = 'No Data';
    cellContentClicked = new EventEmitter();
    cellContentHover = new EventEmitter();
    tableInstance = this;
    constructor() {
        super();
        setTimeout(() => {
            this.init();
        }, 100);
    }
    init() {
        this.setTableHeaders();
        this.setTableData();
        this.setBackupData(this.tableData);
        this.initiatePagination();
    }
    setTableHeaders(tableHeaders) {
        this.tableHeaders = tableHeaders ?? this.tableHeaders;
    }
    setTableData(tableData) {
        this.tableData = tableData ?? this.tableData;
        this.setBackupData(this.tableData);
        this.loadPagination();
    }
    initiatePagination() {
        if (this.paginationEnabled) {
            this.loadPagination();
        }
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.5", ngImport: i0, type: CognitableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.5", type: CognitableComponent, isStandalone: true, selector: "cognitable", inputs: { tableHeaders: "tableHeaders", tableData: "tableData", paginationEnabled: "paginationEnabled", allowedPageSizes: "allowedPageSizes", pageSize: "pageSize", height: "height", loadingMessage: "loadingMessage", noDataMessage: "noDataMessage" }, outputs: { cellContentClicked: "cellContentClicked", cellContentHover: "cellContentHover" }, usesInheritance: true, ngImport: i0, template: "<div class=\"cognitable-container\">\n    <div class=\"cognitable-table-container\">\n        <table class=\"cognitable\">\n            <thead class=\"cognitable-header-row\" style=\"height: 44px\">\n                <th class=\"cognitable-header-cell-container\" *ngFor=\"let header of tableHeaders\">\n                    <cognitable-header-cell [tableInstance]=\"tableInstance\" [header]=\"header\"></cognitable-header-cell>\n                </th>\n            </thead>\n            <tbody class=\"cognitable-data-body\" [style]=\"'height: ' + (height - 44) + 'px' \">\n\n                <div class=\"cognitable-table-overlay\" *ngIf=\"loading\">\n                    <div class=\"cognitable-table-loader-overlay\">\n                        {{loadingMessage}}\n                    </div>\n                </div>\n\n                <div class=\"cognitable-table-overlay\" *ngIf=\"noData\">\n                    <div class=\"cognitable-table-loader-overlay\">\n                        {{noDataMessage}}\n                    </div>\n                </div>\n\n                <tr class=\"cognitable-data-row\" *ngFor=\"let rowData of tableData; let i = index;\">\n                    <td *ngFor=\"let header of tableHeaders; let i = index;\">\n                        <cogintable-data-cell [tableInstance]=\"tableInstance\" [header]=\"header\" [cellData]=\"rowData[header.field]\" [rowData]=\"rowData\" *ngIf=\"!header.hidden\"></cogintable-data-cell>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <ng-container *ngIf=\"paginationEnabled\">\n        <lib-cognitable-pagination [tableInstance]=\"tableInstance\"></lib-cognitable-pagination>\n    </ng-container>\n</div>\n", styles: [".cognitable-container{width:100%;font-family:Arial,Helvetica,sans-serif;display:flex;flex-direction:column}.cognitable-table-container{width:100%;display:flex;overflow-x:auto;overflow-y:hidden}.cognitable{width:100%}.cognitable-header-row{display:block;width:100%;background:#f7f9fb;border-bottom:1px solid #CAD4E0}.cognitable-header-cell-container{display:inline-block;height:100%}.cognitable-header-cell{min-width:150px;padding-top:10px;padding-bottom:10px}.cognitable-data-body{display:block;overflow-y:auto;overflow-x:hidden;width:100%;position:relative}.cognitable-data-row{width:100%;display:inline-block;border-bottom:1px solid #E1E7EF}.cognitable-table-overlay{position:absolute;inset:0;width:100%;background:#fff;display:flex;align-items:center;justify-content:center}.cognitable-table-loader-overlay{border:1px solid #b1afaf;color:#393939;border-radius:5px;padding:2px 10px;font-size:14px}\n"], dependencies: [{ kind: "directive", type: NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: CognitablePaginationComponent, selector: "lib-cognitable-pagination", inputs: ["tableInstance"] }, { kind: "component", type: CognitableHeaderCellComponent, selector: "cognitable-header-cell", inputs: ["header", "tableInstance"] }, { kind: "component", type: CognitableDataCellComponent, selector: "cogintable-data-cell", inputs: ["header", "cellData", "rowData", "tableInstance"] }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.5", ngImport: i0, type: CognitableComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cognitable', standalone: true, imports: [
                        NgForOf,
                        NgStyle,
                        NgIf,
                        CognitablePaginationComponent,
                        CognitableHeaderCellComponent,
                        CognitableDataCellComponent
                    ], template: "<div class=\"cognitable-container\">\n    <div class=\"cognitable-table-container\">\n        <table class=\"cognitable\">\n            <thead class=\"cognitable-header-row\" style=\"height: 44px\">\n                <th class=\"cognitable-header-cell-container\" *ngFor=\"let header of tableHeaders\">\n                    <cognitable-header-cell [tableInstance]=\"tableInstance\" [header]=\"header\"></cognitable-header-cell>\n                </th>\n            </thead>\n            <tbody class=\"cognitable-data-body\" [style]=\"'height: ' + (height - 44) + 'px' \">\n\n                <div class=\"cognitable-table-overlay\" *ngIf=\"loading\">\n                    <div class=\"cognitable-table-loader-overlay\">\n                        {{loadingMessage}}\n                    </div>\n                </div>\n\n                <div class=\"cognitable-table-overlay\" *ngIf=\"noData\">\n                    <div class=\"cognitable-table-loader-overlay\">\n                        {{noDataMessage}}\n                    </div>\n                </div>\n\n                <tr class=\"cognitable-data-row\" *ngFor=\"let rowData of tableData; let i = index;\">\n                    <td *ngFor=\"let header of tableHeaders; let i = index;\">\n                        <cogintable-data-cell [tableInstance]=\"tableInstance\" [header]=\"header\" [cellData]=\"rowData[header.field]\" [rowData]=\"rowData\" *ngIf=\"!header.hidden\"></cogintable-data-cell>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n\n    <ng-container *ngIf=\"paginationEnabled\">\n        <lib-cognitable-pagination [tableInstance]=\"tableInstance\"></lib-cognitable-pagination>\n    </ng-container>\n</div>\n", styles: [".cognitable-container{width:100%;font-family:Arial,Helvetica,sans-serif;display:flex;flex-direction:column}.cognitable-table-container{width:100%;display:flex;overflow-x:auto;overflow-y:hidden}.cognitable{width:100%}.cognitable-header-row{display:block;width:100%;background:#f7f9fb;border-bottom:1px solid #CAD4E0}.cognitable-header-cell-container{display:inline-block;height:100%}.cognitable-header-cell{min-width:150px;padding-top:10px;padding-bottom:10px}.cognitable-data-body{display:block;overflow-y:auto;overflow-x:hidden;width:100%;position:relative}.cognitable-data-row{width:100%;display:inline-block;border-bottom:1px solid #E1E7EF}.cognitable-table-overlay{position:absolute;inset:0;width:100%;background:#fff;display:flex;align-items:center;justify-content:center}.cognitable-table-loader-overlay{border:1px solid #b1afaf;color:#393939;border-radius:5px;padding:2px 10px;font-size:14px}\n"] }]
        }], ctorParameters: () => [], propDecorators: { tableHeaders: [{
                type: Input
            }], tableData: [{
                type: Input
            }], paginationEnabled: [{
                type: Input
            }], allowedPageSizes: [{
                type: Input
            }], pageSize: [{
                type: Input
            }], height: [{
                type: Input
            }], loadingMessage: [{
                type: Input
            }], noDataMessage: [{
                type: Input
            }], cellContentClicked: [{
                type: Output
            }], cellContentHover: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29nbml0YWJsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL2NvZ25pdGFibGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vc3JjL2xpYi9jb2duaXRhYmxlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFckUsT0FBTyxFQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDdkQsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHNDQUFzQyxDQUFDO0FBQ25FLE9BQU8sRUFBQyw2QkFBNkIsRUFBQyxNQUFNLDBFQUEwRSxDQUFDO0FBQ3ZILE9BQU8sRUFDTCw2QkFBNkIsRUFDOUIsTUFBTSw0RUFBNEUsQ0FBQztBQUNwRixPQUFPLEVBQ0wsMkJBQTJCLEVBQzVCLE1BQU0sd0VBQXdFLENBQUM7O0FBZ0JoRixNQUFNLE9BQU8sbUJBQW9CLFNBQVEsYUFBYTtJQUUzQyxZQUFZLEdBQXVCLEVBQUUsQ0FBQztJQUd2QyxTQUFTLENBQU07SUFHZCxpQkFBaUIsR0FBWSxLQUFLLENBQUM7SUFHbkMsZ0JBQWdCLEdBQWEsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUcvQyxRQUFRLEdBQVcsRUFBRSxDQUFDO0lBR3RCLE1BQU0sR0FBRyxHQUFHLENBQUM7SUFHYixjQUFjLEdBQVcsWUFBWSxDQUFDO0lBR3RDLGFBQWEsR0FBVyxTQUFTLENBQUM7SUFHbEMsa0JBQWtCLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUd4QyxnQkFBZ0IsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBRXhDLGFBQWEsR0FBa0IsSUFBSSxDQUFDO0lBRTNDO1FBQ0UsS0FBSyxFQUFFLENBQUM7UUFDUixVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ2QsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2QsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ1YsQ0FBQztJQUVELElBQUk7UUFDRixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ25DLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFFTSxlQUFlLENBQUMsWUFBNEI7UUFDakQsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQztJQUN4RCxDQUFDO0lBRU0sWUFBWSxDQUFDLFNBQWU7UUFDakMsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUM3QyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUVPLGtCQUFrQjtRQUN4QixJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1lBQzNCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN4QixDQUFDO0lBQ0gsQ0FBQzt1R0E3RFUsbUJBQW1COzJGQUFuQixtQkFBbUIsb2JDMUJoQyxxc0RBbUNBLCs3QkRuQkksT0FBTyxtSEFFUCxJQUFJLDZGQUNKLDZCQUE2QixpR0FDN0IsNkJBQTZCLHdHQUM3QiwyQkFBMkI7OzJGQUtsQixtQkFBbUI7a0JBZC9CLFNBQVM7K0JBQ0UsWUFBWSxjQUNWLElBQUksV0FDUDt3QkFDUCxPQUFPO3dCQUNQLE9BQU87d0JBQ1AsSUFBSTt3QkFDSiw2QkFBNkI7d0JBQzdCLDZCQUE2Qjt3QkFDN0IsMkJBQTJCO3FCQUM1Qjt3REFNUSxZQUFZO3NCQURwQixLQUFLO2dCQUlFLFNBQVM7c0JBRGhCLEtBQUs7Z0JBSUcsaUJBQWlCO3NCQUR6QixLQUFLO2dCQUlHLGdCQUFnQjtzQkFEeEIsS0FBSztnQkFJRyxRQUFRO3NCQURoQixLQUFLO2dCQUlHLE1BQU07c0JBRGQsS0FBSztnQkFJRyxjQUFjO3NCQUR0QixLQUFLO2dCQUlHLGFBQWE7c0JBRHJCLEtBQUs7Z0JBSUcsa0JBQWtCO3NCQUQxQixNQUFNO2dCQUlFLGdCQUFnQjtzQkFEeEIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUYWJsZUhlYWRlcn0gZnJvbSAnLi9jb21tb25zL21vZGVscy90YWJsZS1oZWFkZXInO1xuaW1wb3J0IHtOZ0Zvck9mLCBOZ0lmLCBOZ1N0eWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtUYWJsZUluc3RhbmNlfSBmcm9tICcuL2NvbW1vbnMvZXhwb3J0YWJsZXMvdGFibGUtaW5zdGFuY2UnO1xuaW1wb3J0IHtDb2duaXRhYmxlUGFnaW5hdGlvbkNvbXBvbmVudH0gZnJvbSAnLi9jb21wb25lbnRzL3RhYmxlL2NvZ25pdGFibGUtcGFnaW5hdGlvbi9jb2duaXRhYmxlLXBhZ2luYXRpb24uY29tcG9uZW50JztcbmltcG9ydCB7XG4gIENvZ25pdGFibGVIZWFkZXJDZWxsQ29tcG9uZW50XG59IGZyb20gJy4vY29tcG9uZW50cy90YWJsZS9jb2duaXRhYmxlLWhlYWRlci1jZWxsL2NvZ25pdGFibGUtaGVhZGVyLWNlbGwuY29tcG9uZW50JztcbmltcG9ydCB7XG4gIENvZ25pdGFibGVEYXRhQ2VsbENvbXBvbmVudFxufSBmcm9tICcuL2NvbXBvbmVudHMvdGFibGUvY29naW50YWJsZS1kYXRhLWNlbGwvY29nbml0YWJsZS1kYXRhLWNlbGwuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29nbml0YWJsZScsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBOZ0Zvck9mLFxuICAgIE5nU3R5bGUsXG4gICAgTmdJZixcbiAgICBDb2duaXRhYmxlUGFnaW5hdGlvbkNvbXBvbmVudCxcbiAgICBDb2duaXRhYmxlSGVhZGVyQ2VsbENvbXBvbmVudCxcbiAgICBDb2duaXRhYmxlRGF0YUNlbGxDb21wb25lbnRcbiAgXSxcbiAgdGVtcGxhdGVVcmw6ICcuL2NvZ25pdGFibGUuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybDogJy4vY29nbml0YWJsZS5jb21wb25lbnQuc2Nzcydcbn0pXG5leHBvcnQgY2xhc3MgQ29nbml0YWJsZUNvbXBvbmVudCBleHRlbmRzIFRhYmxlSW5zdGFuY2Uge1xuICBASW5wdXQoKVxuICBvdmVycmlkZSB0YWJsZUhlYWRlcnM6IEFycmF5PFRhYmxlSGVhZGVyPiA9IFtdO1xuXG4gIEBJbnB1dCgpXG4gIGRlY2xhcmUgdGFibGVEYXRhOiBhbnk7XG5cbiAgQElucHV0KClcbiAgb3ZlcnJpZGUgcGFnaW5hdGlvbkVuYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBASW5wdXQoKVxuICBvdmVycmlkZSBhbGxvd2VkUGFnZVNpemVzOiBudW1iZXJbXSA9IFsxMCwgMjUsIDUwLCAxMDBdO1xuXG4gIEBJbnB1dCgpXG4gIG92ZXJyaWRlIHBhZ2VTaXplOiBudW1iZXIgPSAxMDtcblxuICBASW5wdXQoKVxuICBvdmVycmlkZSBoZWlnaHQgPSA0MDA7XG5cbiAgQElucHV0KClcbiAgb3ZlcnJpZGUgbG9hZGluZ01lc3NhZ2U6IHN0cmluZyA9ICdMb2FkaW5nLi4uJztcblxuICBASW5wdXQoKVxuICBvdmVycmlkZSBub0RhdGFNZXNzYWdlOiBzdHJpbmcgPSAnTm8gRGF0YSc7XG5cbiAgQE91dHB1dCgpXG4gIG92ZXJyaWRlIGNlbGxDb250ZW50Q2xpY2tlZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBAT3V0cHV0KClcbiAgb3ZlcnJpZGUgY2VsbENvbnRlbnRIb3ZlciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBwdWJsaWMgdGFibGVJbnN0YW5jZTogVGFibGVJbnN0YW5jZSA9IHRoaXM7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuaW5pdCgpO1xuICAgIH0sIDEwMCk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuc2V0VGFibGVIZWFkZXJzKCk7XG4gICAgdGhpcy5zZXRUYWJsZURhdGEoKTtcbiAgICB0aGlzLnNldEJhY2t1cERhdGEodGhpcy50YWJsZURhdGEpO1xuICAgIHRoaXMuaW5pdGlhdGVQYWdpbmF0aW9uKCk7XG4gIH1cblxuICBwdWJsaWMgc2V0VGFibGVIZWFkZXJzKHRhYmxlSGVhZGVycz86IFRhYmxlSGVhZGVyW10pIHtcbiAgICB0aGlzLnRhYmxlSGVhZGVycyA9IHRhYmxlSGVhZGVycyA/PyB0aGlzLnRhYmxlSGVhZGVycztcbiAgfVxuXG4gIHB1YmxpYyBzZXRUYWJsZURhdGEodGFibGVEYXRhPzogYW55KSB7XG4gICAgdGhpcy50YWJsZURhdGEgPSB0YWJsZURhdGEgPz8gdGhpcy50YWJsZURhdGE7XG4gICAgdGhpcy5zZXRCYWNrdXBEYXRhKHRoaXMudGFibGVEYXRhKTtcbiAgICB0aGlzLmxvYWRQYWdpbmF0aW9uKCk7XG4gIH1cblxuICBwcml2YXRlIGluaXRpYXRlUGFnaW5hdGlvbigpIHtcbiAgICBpZiAodGhpcy5wYWdpbmF0aW9uRW5hYmxlZCkge1xuICAgICAgdGhpcy5sb2FkUGFnaW5hdGlvbigpO1xuICAgIH1cbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cImNvZ25pdGFibGUtY29udGFpbmVyXCI+XG4gICAgPGRpdiBjbGFzcz1cImNvZ25pdGFibGUtdGFibGUtY29udGFpbmVyXCI+XG4gICAgICAgIDx0YWJsZSBjbGFzcz1cImNvZ25pdGFibGVcIj5cbiAgICAgICAgICAgIDx0aGVhZCBjbGFzcz1cImNvZ25pdGFibGUtaGVhZGVyLXJvd1wiIHN0eWxlPVwiaGVpZ2h0OiA0NHB4XCI+XG4gICAgICAgICAgICAgICAgPHRoIGNsYXNzPVwiY29nbml0YWJsZS1oZWFkZXItY2VsbC1jb250YWluZXJcIiAqbmdGb3I9XCJsZXQgaGVhZGVyIG9mIHRhYmxlSGVhZGVyc1wiPlxuICAgICAgICAgICAgICAgICAgICA8Y29nbml0YWJsZS1oZWFkZXItY2VsbCBbdGFibGVJbnN0YW5jZV09XCJ0YWJsZUluc3RhbmNlXCIgW2hlYWRlcl09XCJoZWFkZXJcIj48L2NvZ25pdGFibGUtaGVhZGVyLWNlbGw+XG4gICAgICAgICAgICAgICAgPC90aD5cbiAgICAgICAgICAgIDwvdGhlYWQ+XG4gICAgICAgICAgICA8dGJvZHkgY2xhc3M9XCJjb2duaXRhYmxlLWRhdGEtYm9keVwiIFtzdHlsZV09XCInaGVpZ2h0OiAnICsgKGhlaWdodCAtIDQ0KSArICdweCcgXCI+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29nbml0YWJsZS10YWJsZS1vdmVybGF5XCIgKm5nSWY9XCJsb2FkaW5nXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2duaXRhYmxlLXRhYmxlLWxvYWRlci1vdmVybGF5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7e2xvYWRpbmdNZXNzYWdlfX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29nbml0YWJsZS10YWJsZS1vdmVybGF5XCIgKm5nSWY9XCJub0RhdGFcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvZ25pdGFibGUtdGFibGUtbG9hZGVyLW92ZXJsYXlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt7bm9EYXRhTWVzc2FnZX19XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPHRyIGNsYXNzPVwiY29nbml0YWJsZS1kYXRhLXJvd1wiICpuZ0Zvcj1cImxldCByb3dEYXRhIG9mIHRhYmxlRGF0YTsgbGV0IGkgPSBpbmRleDtcIj5cbiAgICAgICAgICAgICAgICAgICAgPHRkICpuZ0Zvcj1cImxldCBoZWFkZXIgb2YgdGFibGVIZWFkZXJzOyBsZXQgaSA9IGluZGV4O1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGNvZ2ludGFibGUtZGF0YS1jZWxsIFt0YWJsZUluc3RhbmNlXT1cInRhYmxlSW5zdGFuY2VcIiBbaGVhZGVyXT1cImhlYWRlclwiIFtjZWxsRGF0YV09XCJyb3dEYXRhW2hlYWRlci5maWVsZF1cIiBbcm93RGF0YV09XCJyb3dEYXRhXCIgKm5nSWY9XCIhaGVhZGVyLmhpZGRlblwiPjwvY29naW50YWJsZS1kYXRhLWNlbGw+XG4gICAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgIDwvdGFibGU+XG4gICAgPC9kaXY+XG5cbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwicGFnaW5hdGlvbkVuYWJsZWRcIj5cbiAgICAgICAgPGxpYi1jb2duaXRhYmxlLXBhZ2luYXRpb24gW3RhYmxlSW5zdGFuY2VdPVwidGFibGVJbnN0YW5jZVwiPjwvbGliLWNvZ25pdGFibGUtcGFnaW5hdGlvbj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbjwvZGl2PlxuIl19