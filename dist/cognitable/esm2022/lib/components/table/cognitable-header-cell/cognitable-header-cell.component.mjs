import { Component, Input } from '@angular/core';
import { NgIf, NgStyle } from '@angular/common';
import * as i0 from "@angular/core";
export class CognitableHeaderCellComponent {
    header;
    tableInstance;
    constructor() {
    }
    ngOnInit() {
    }
    clickAction() {
        if (this.header?.sort?.enabled) {
            this.sort();
        }
    }
    sort() {
        if (this.header?.sort?.enabled) {
            if (!this.header.sort.direction) {
                this.header.sort.direction = 'asc';
            }
            else if (this.header.sort.direction === 'asc') {
                this.header.sort.direction = 'desc';
            }
            else if (this.header.sort.direction === 'desc') {
                this.header.sort.direction = undefined;
            }
            this.tableInstance?.sort(this.header.field, this.header.sort.direction);
        }
    }
    onCheck(event, field) {
        if (this.tableInstance) {
            this.tableInstance.tableData = (this.tableInstance?.tableData ?? []).map((data) => {
                data.checked = data.checked ?? {};
                data.checked[field] = event?.target?.checked ?? false;
                return data;
            });
        }
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.5", ngImport: i0, type: CognitableHeaderCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.5", type: CognitableHeaderCellComponent, isStandalone: true, selector: "cognitable-header-cell", inputs: { header: "header", tableInstance: "tableInstance" }, ngImport: i0, template: "<div [style]=\"'height: 100%; display: flex; align-items: center;'\">\n  <div style=\"width: 20px; height: 100%; display: flex; align-items: center;\">\n    <div style=\"width: 15px; height: 15px;\">\n      <span *ngIf=\"header?.checkbox?.showInHeader\">\n        <input type=\"checkbox\" class=\"cognitable-header-checkbox\" (change)=\"onCheck($event, header?.field)\">\n      </span>\n      <span *ngIf=\"!header?.checkbox?.showInHeader\">&nbsp;</span>\n    </div>\n  </div>\n  <div class=\"cognitable-header-cell\" [style]=\"header?.styles?.headerCellStyles\" (click)=\"clickAction()\">\n    <div class=\"cognitable-header-cell-content\" [style]=\"header?.styles?.headerCellContentStyles\">{{header?.title}}</div>\n  </div>\n  <div style=\"width: 20px; height: 100%; display: flex; align-items: center; justify-content: center;\">\n\n    <!-- Sorting -->\n    <div style=\"width: 15px; height: 15px;\" *ngIf=\"header?.sort?.enabled\">\n      <div style=\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center;\" *ngIf=\"header?.sort?.direction === 'asc'\">\n        <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M4.0625 9.375L7.8125 5.625L11.5625 9.375\" stroke=\"black\" stroke-width=\"1.33333\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n      </div>\n\n      <div style=\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center;\" *ngIf=\"header?.sort?.direction === 'desc'\">\n        <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M10.9375 5.625L7.1875 9.375L3.4375 5.625\" stroke=\"black\" stroke-width=\"1.33333\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n      </div>\n    </div>\n    <!-- /Sorting -->\n\n  </div>\n</div>\n", styles: [".cognitable-header-cell{width:150px;display:flex;align-items:center;cursor:pointer}.cognitable-header-cell-content{width:100%;text-align:left;font-size:14px;font-weight:700;display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.cognitable-header-checkbox{margin-bottom:14px;width:14px;height:14px}.cognitable-header-checkbox:focus{outline:none!important;--tw-ring-color: none !important}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.5", ngImport: i0, type: CognitableHeaderCellComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cognitable-header-cell', standalone: true, imports: [
                        NgIf,
                        NgStyle
                    ], template: "<div [style]=\"'height: 100%; display: flex; align-items: center;'\">\n  <div style=\"width: 20px; height: 100%; display: flex; align-items: center;\">\n    <div style=\"width: 15px; height: 15px;\">\n      <span *ngIf=\"header?.checkbox?.showInHeader\">\n        <input type=\"checkbox\" class=\"cognitable-header-checkbox\" (change)=\"onCheck($event, header?.field)\">\n      </span>\n      <span *ngIf=\"!header?.checkbox?.showInHeader\">&nbsp;</span>\n    </div>\n  </div>\n  <div class=\"cognitable-header-cell\" [style]=\"header?.styles?.headerCellStyles\" (click)=\"clickAction()\">\n    <div class=\"cognitable-header-cell-content\" [style]=\"header?.styles?.headerCellContentStyles\">{{header?.title}}</div>\n  </div>\n  <div style=\"width: 20px; height: 100%; display: flex; align-items: center; justify-content: center;\">\n\n    <!-- Sorting -->\n    <div style=\"width: 15px; height: 15px;\" *ngIf=\"header?.sort?.enabled\">\n      <div style=\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center;\" *ngIf=\"header?.sort?.direction === 'asc'\">\n        <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M4.0625 9.375L7.8125 5.625L11.5625 9.375\" stroke=\"black\" stroke-width=\"1.33333\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n      </div>\n\n      <div style=\"width: 100%; height: 100%; display: flex; align-items: center; justify-content: center;\" *ngIf=\"header?.sort?.direction === 'desc'\">\n        <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M10.9375 5.625L7.1875 9.375L3.4375 5.625\" stroke=\"black\" stroke-width=\"1.33333\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n      </div>\n    </div>\n    <!-- /Sorting -->\n\n  </div>\n</div>\n", styles: [".cognitable-header-cell{width:150px;display:flex;align-items:center;cursor:pointer}.cognitable-header-cell-content{width:100%;text-align:left;font-size:14px;font-weight:700;display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.cognitable-header-checkbox{margin-bottom:14px;width:14px;height:14px}.cognitable-header-checkbox:focus{outline:none!important;--tw-ring-color: none !important}\n"] }]
        }], ctorParameters: () => [], propDecorators: { header: [{
                type: Input
            }], tableInstance: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29nbml0YWJsZS1oZWFkZXItY2VsbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2NvbXBvbmVudHMvdGFibGUvY29nbml0YWJsZS1oZWFkZXItY2VsbC9jb2duaXRhYmxlLWhlYWRlci1jZWxsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvY29tcG9uZW50cy90YWJsZS9jb2duaXRhYmxlLWhlYWRlci1jZWxsL2NvZ25pdGFibGUtaGVhZGVyLWNlbGwuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQVMsTUFBTSxlQUFlLENBQUM7QUFFdkQsT0FBTyxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQzs7QUFjOUMsTUFBTSxPQUFPLDZCQUE2QjtJQUV4QyxNQUFNLENBQTBCO0lBR2hDLGFBQWEsQ0FBNEI7SUFFekM7SUFDQSxDQUFDO0lBRUQsUUFBUTtJQUNSLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsQ0FBQztZQUMvQixJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDZCxDQUFDO0lBQ0gsQ0FBQztJQUVELElBQUk7UUFDRixJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxDQUFDO1lBQy9CLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztnQkFDaEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztZQUNyQyxDQUFDO2lCQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxLQUFLLEtBQUssRUFBRSxDQUFDO2dCQUNoRCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDO1lBQ3RDLENBQUM7aUJBQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLEtBQUssTUFBTSxFQUFFLENBQUM7Z0JBQ2pELElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7WUFDekMsQ0FBQztZQUNELElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzFFLENBQUM7SUFDSCxDQUFDO0lBRUQsT0FBTyxDQUFDLEtBQVUsRUFBRSxLQUFVO1FBQzVCLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxTQUFTLElBQUksRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBUyxFQUFFLEVBQUU7Z0JBQ3JGLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUM7Z0JBQ2xDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsS0FBSyxFQUFFLE1BQU0sRUFBRSxPQUFPLElBQUksS0FBSyxDQUFDO2dCQUN0RCxPQUFPLElBQUksQ0FBQztZQUNkLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztJQUNILENBQUM7dUdBeENVLDZCQUE2QjsyRkFBN0IsNkJBQTZCLGdKQ2hCMUMsNjNEQWdDQSxpZER0QkksSUFBSTs7MkZBTUssNkJBQTZCO2tCQVZ6QyxTQUFTOytCQUNFLHdCQUF3QixjQUN0QixJQUFJLFdBQ1A7d0JBQ1AsSUFBSTt3QkFDSixPQUFPO3FCQUNSO3dEQU1ELE1BQU07c0JBREwsS0FBSztnQkFJTixhQUFhO3NCQURaLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1RhYmxlSGVhZGVyfSBmcm9tICcuLi8uLi8uLi9jb21tb25zL21vZGVscy90YWJsZS1oZWFkZXInO1xuaW1wb3J0IHtOZ0lmLCBOZ1N0eWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtUYWJsZUluc3RhbmNlfSBmcm9tICcuLi8uLi8uLi9jb21tb25zL2V4cG9ydGFibGVzL3RhYmxlLWluc3RhbmNlJztcbmltcG9ydCB7ZGF0YX0gZnJvbSAnYXV0b3ByZWZpeGVyJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29nbml0YWJsZS1oZWFkZXItY2VsbCcsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtcbiAgICBOZ0lmLFxuICAgIE5nU3R5bGVcbiAgXSxcbiAgdGVtcGxhdGVVcmw6ICcuL2NvZ25pdGFibGUtaGVhZGVyLWNlbGwuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybDogJy4vY29nbml0YWJsZS1oZWFkZXItY2VsbC5jb21wb25lbnQuY3NzJ1xufSlcbmV4cG9ydCBjbGFzcyBDb2duaXRhYmxlSGVhZGVyQ2VsbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpXG4gIGhlYWRlcjogVGFibGVIZWFkZXIgfCB1bmRlZmluZWQ7XG5cbiAgQElucHV0KClcbiAgdGFibGVJbnN0YW5jZTogVGFibGVJbnN0YW5jZSB8IHVuZGVmaW5lZDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG5cbiAgY2xpY2tBY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuaGVhZGVyPy5zb3J0Py5lbmFibGVkKSB7XG4gICAgICB0aGlzLnNvcnQoKTtcbiAgICB9XG4gIH1cblxuICBzb3J0KCkge1xuICAgIGlmICh0aGlzLmhlYWRlcj8uc29ydD8uZW5hYmxlZCkge1xuICAgICAgaWYgKCF0aGlzLmhlYWRlci5zb3J0LmRpcmVjdGlvbikge1xuICAgICAgICB0aGlzLmhlYWRlci5zb3J0LmRpcmVjdGlvbiA9ICdhc2MnO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmhlYWRlci5zb3J0LmRpcmVjdGlvbiA9PT0gJ2FzYycpIHtcbiAgICAgICAgdGhpcy5oZWFkZXIuc29ydC5kaXJlY3Rpb24gPSAnZGVzYyc7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaGVhZGVyLnNvcnQuZGlyZWN0aW9uID09PSAnZGVzYycpIHtcbiAgICAgICAgdGhpcy5oZWFkZXIuc29ydC5kaXJlY3Rpb24gPSB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgICB0aGlzLnRhYmxlSW5zdGFuY2U/LnNvcnQodGhpcy5oZWFkZXIuZmllbGQsIHRoaXMuaGVhZGVyLnNvcnQuZGlyZWN0aW9uKTtcbiAgICB9XG4gIH1cblxuICBvbkNoZWNrKGV2ZW50OiBhbnksIGZpZWxkOiBhbnkpIHtcbiAgICBpZiAodGhpcy50YWJsZUluc3RhbmNlKSB7XG4gICAgICB0aGlzLnRhYmxlSW5zdGFuY2UudGFibGVEYXRhID0gKHRoaXMudGFibGVJbnN0YW5jZT8udGFibGVEYXRhID8/IFtdKS5tYXAoKGRhdGE6IGFueSkgPT4ge1xuICAgICAgICBkYXRhLmNoZWNrZWQgPSBkYXRhLmNoZWNrZWQgPz8ge307XG4gICAgICAgIGRhdGEuY2hlY2tlZFtmaWVsZF0gPSBldmVudD8udGFyZ2V0Py5jaGVja2VkID8/IGZhbHNlO1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuIiwiPGRpdiBbc3R5bGVdPVwiJ2hlaWdodDogMTAwJTsgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsnXCI+XG4gIDxkaXYgc3R5bGU9XCJ3aWR0aDogMjBweDsgaGVpZ2h0OiAxMDAlOyBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyO1wiPlxuICAgIDxkaXYgc3R5bGU9XCJ3aWR0aDogMTVweDsgaGVpZ2h0OiAxNXB4O1wiPlxuICAgICAgPHNwYW4gKm5nSWY9XCJoZWFkZXI/LmNoZWNrYm94Py5zaG93SW5IZWFkZXJcIj5cbiAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwiY29nbml0YWJsZS1oZWFkZXItY2hlY2tib3hcIiAoY2hhbmdlKT1cIm9uQ2hlY2soJGV2ZW50LCBoZWFkZXI/LmZpZWxkKVwiPlxuICAgICAgPC9zcGFuPlxuICAgICAgPHNwYW4gKm5nSWY9XCIhaGVhZGVyPy5jaGVja2JveD8uc2hvd0luSGVhZGVyXCI+Jm5ic3A7PC9zcGFuPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz1cImNvZ25pdGFibGUtaGVhZGVyLWNlbGxcIiBbc3R5bGVdPVwiaGVhZGVyPy5zdHlsZXM/LmhlYWRlckNlbGxTdHlsZXNcIiAoY2xpY2spPVwiY2xpY2tBY3Rpb24oKVwiPlxuICAgIDxkaXYgY2xhc3M9XCJjb2duaXRhYmxlLWhlYWRlci1jZWxsLWNvbnRlbnRcIiBbc3R5bGVdPVwiaGVhZGVyPy5zdHlsZXM/LmhlYWRlckNlbGxDb250ZW50U3R5bGVzXCI+e3toZWFkZXI/LnRpdGxlfX08L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgc3R5bGU9XCJ3aWR0aDogMjBweDsgaGVpZ2h0OiAxMDAlOyBkaXNwbGF5OiBmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcIj5cblxuICAgIDwhLS0gU29ydGluZyAtLT5cbiAgICA8ZGl2IHN0eWxlPVwid2lkdGg6IDE1cHg7IGhlaWdodDogMTVweDtcIiAqbmdJZj1cImhlYWRlcj8uc29ydD8uZW5hYmxlZFwiPlxuICAgICAgPGRpdiBzdHlsZT1cIndpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7IGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGp1c3RpZnktY29udGVudDogY2VudGVyO1wiICpuZ0lmPVwiaGVhZGVyPy5zb3J0Py5kaXJlY3Rpb24gPT09ICdhc2MnXCI+XG4gICAgICAgIDxzdmcgd2lkdGg9XCIxNVwiIGhlaWdodD1cIjE1XCIgdmlld0JveD1cIjAgMCAxNSAxNVwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuICAgICAgICAgIDxwYXRoIGQ9XCJNNC4wNjI1IDkuMzc1TDcuODEyNSA1LjYyNUwxMS41NjI1IDkuMzc1XCIgc3Ryb2tlPVwiYmxhY2tcIiBzdHJva2Utd2lkdGg9XCIxLjMzMzMzXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCIvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IHN0eWxlPVwid2lkdGg6IDEwMCU7IGhlaWdodDogMTAwJTsgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XCIgKm5nSWY9XCJoZWFkZXI/LnNvcnQ/LmRpcmVjdGlvbiA9PT0gJ2Rlc2MnXCI+XG4gICAgICAgIDxzdmcgd2lkdGg9XCIxNVwiIGhlaWdodD1cIjE1XCIgdmlld0JveD1cIjAgMCAxNSAxNVwiIGZpbGw9XCJub25lXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPlxuICAgICAgICAgIDxwYXRoIGQ9XCJNMTAuOTM3NSA1LjYyNUw3LjE4NzUgOS4zNzVMMy40Mzc1IDUuNjI1XCIgc3Ryb2tlPVwiYmxhY2tcIiBzdHJva2Utd2lkdGg9XCIxLjMzMzMzXCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCIvPlxuICAgICAgICA8L3N2Zz5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDwhLS0gL1NvcnRpbmcgLS0+XG5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==